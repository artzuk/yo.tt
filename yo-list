#!/usr/bin/env node
const app = require('commander'),
			packageJSON = require('./package.json'),
			TAFFY = require('node-taffydb').TAFFY,
			moment = require('moment'),
			Table = require('cli-table');

// initialize app meta info
app.parse(process.argv);

const _pad = (n, width, z) => {
    z = z || '0';
    n = n + '';

    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
  };

const getDiff = (from, to) => {
	if (!from || !to) {
		return '';
	}

	from = moment(from);
	to = moment(to);

	if (!moment(from).isValid() || !moment(to).isValid()) {
		return '';
	}

	let dur = moment.duration(to.diff(from));
	let hh = _pad('' + dur.hours(), 2),
			mm = _pad('' + dur.minutes(), 2);

		return '' + hh + ':' + mm;
};

const datafile = __dirname + '/data/entries.json';
const data = require(datafile);
const db = TAFFY(data && data.tracks || []);
const tracks = db().get();

if (!tracks.length) {
	console.log('No tracks found, yo.')
} else {

	console.log('\nYo, here\'s your report:');

	let table = new Table({
		head: [
			'Date',
			'From',
			'To',
			'Duration',
			'Task'
		]
	});

	let duration;

	for (let i = 0, len = tracks.length; i < len; i++) {
		
		if (!tracks[i] || !tracks[i].start) {
			continue;
		}

		duration = null;

		if (tracks[i].end) {
			duration = getDiff(tracks[i].start, tracks[i].end);
		}

		table.push([
			moment(tracks[i].start).format('YYYY-MM-DD'),
			moment(tracks[i].start).format('HH:mm'),
			tracks[i].end ? moment(tracks[i].end).format('HH:mm') : 'running',
			tracks[i].end && duration ? duration : '--:--',
			tracks[i].task || '' 
		]);

	}

	console.log('\n' + table.toString());

}