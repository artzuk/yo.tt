#!/usr/bin/env node
const app = require('commander'),
			packageJSON = require('./package.json'),
			TAFFY = require('node-taffydb').TAFFY,
			jsonfile = require('jsonfile'),
			moment = require('moment');

// initialize app meta info
app.parse(process.argv);

const getDate = (d) => {
	d = d && d.replace(' ', 'T');
	d = moment(d);
	return (d.isValid() ? d : moment()).format();
};

const datafile = __dirname + '/data/entries.json';

let data = require(datafile);
const db = TAFFY(data && data.tracks || []);

// get last track
const last = db().last();
let track = {};

if (app.task) {
	track.task = app.task;
}

if (last && last.end || !last) {
	// create track
 
	track = {
		start: getDate(app.start)
	};

	db.insert(track);

	console.log('Yo, tracking started!');

} else {
	// end track

	if (app.start) {
		track.start = getDate(app.start);
	}

	if (!app.task || app.end) {
		track.end = getDate(app.end);
	}

	db(last.___id).update(track)

	console.log('Done, huh? Yo!');

}

// save dataset
data.tracks = db().get();
jsonfile.writeFileSync(datafile, data, { spaces: 2 });
