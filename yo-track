#!/usr/bin/env node
const app = require('commander'),
			packageJSON = require('./package.json'),
			TAFFY = require('node-taffydb').TAFFY,
			jsonfile = require('jsonfile'),
			moment = require('moment'),
			timediff = require('timediff');

// initialize app meta info
app
	.option('-s, --start [time]', 'adjust current tracks starting time')
	.option('-e, --end [time]', 'adjust current tracks ending time')
	.option('-t, --task [taskname]', 'current task')
	.parse(process.argv);

const getDate = (d) => {
	d = d && d.replace(' ', 'T');
	d = moment(d);
	return (d.isValid() ? d : moment()).format();
};

const datafile = __dirname + '/data/entries.json';

let data = require(datafile);
const db = TAFFY(data && data.tracks || []);

// get last track
const last = db().last();
let track = {};

if (app.task) {
	track.task = app.task;
}

if (last && last.end || !last) {
	// create track
 
	track = {
		start: getDate(app.start)
	};

	db.insert(track);

	console.log('Ok Jim, you just checked in!');

} else {
	// end track

	if (app.start) {
		track.start = getDate(app.start);
	}

	if (!app.task || app.end) {
		track.end = getDate(app.end);
		track.diff = timediff(track.start || last.start, track.end, 'YDHms');		
	}

	let after = '';

	if (track.diff) {
		after  = track.diff.days ? track.diff.days + ' days' : '';
		after += track.diff.hours ? (after ? ', ' : '') + track.diff.hours + ' hours' : '';
		after += track.diff.minutes ? (after ? ' and ' : '') + track.diff.minutes + ' minutes' : '';

		delete track.diff.milliseconds;
	}

	db(last.___id).update(track)

	console.log('Done, huh?' + ( after ? ' After just ' + after + '... That\'s what you call work?' : '' ));

}

// save dataset
data.tracks = db().get();
jsonfile.writeFileSync(datafile, data, { spaces: 2 });
